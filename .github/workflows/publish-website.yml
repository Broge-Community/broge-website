name: Deploy Broge Website

permissions:
  actions: write
  id-token: write
  pages: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: build it
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          ssh-key: ${{ secrets.THIS_KEY }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install && npm install --only=dev
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Check Prettier availability
        id: check-prettier
        run: |
          if command -v prettier >/dev/null 2>&1; then
            echo "::set-output name=prettier_available::true"
          else
            echo "::set-output name=prettier_available::false"
          fi

      - name: Install dependencies (retry)
        run: npm install
        if: steps.check-prettier.outputs.prettier_available != 'true'

      - name: Format code
        run: npm run format

      - name: Build for deployment
        run: npm run build

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy to GitHub Pages
        run: |
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Clone the target repository
          git clone git@github.com:Broge-Community/broge-community.github.io.git
          cd broge-community.github.io

          # Remove existing files
          git rm -rf .

          # Copy new files from the build
          cp -r ../dist/* .

          # Commit and push changes
          git add .
          git commit -m "Deploy to GitHub Pages"
          git push origin main --force
